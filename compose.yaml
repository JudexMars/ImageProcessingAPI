services:
  image-crud:
    build:
      context: image-crud
      dockerfile: docker/Dockerfile
    depends_on:
      - image-crud-postgres
      - image-crud-redis
      - image-crud-s3
      - kafka-1
      - kafka-2
      - kafka-3
    secrets:
      - postgres-password
      - ssl-keystore
      - ssl-truststore
    ports:
      - 8080:8080
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://image-crud-postgres/image-db
      - SPRING_DATA_REDIS_HOST=image-crud-redis
      - MINIO_URL=http://image-crud-s3:9000
      - MINIO_TTL=1
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:9082,kafka-2:9083,kafka-3:9084
      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_SSL
      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
      - SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_LOCATION=/run/secrets/ssl-truststore
      - SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_LOCATION=/run/secrets/ssl-keystore
      - SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_KEY_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=
    networks:
      - shared-network
  image-crud-postgres:
    image: postgres
    restart: always
    secrets:
      - postgres-password
    networks:
      - shared-network
    environment:
      - POSTGRES_DB=image-db
      - POSTGRES_USER=judex
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-password
      - PG_DATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - postgres-volume:/var/lib/postgresql/data
  image-crud-s3:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: judex
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio-volume:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - shared-network
  image-crud-redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --logLevel warning --requirePass 6k_j76,dDUl_
    volumes:
      - redis-volume-crud:/data
    networks:
      - shared-network

  kafka-1:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9082:9082"
      - "29092:29092"
    secrets:
      - ssl-keystore
      - ssl-truststore
      - jaas
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,EXTERNAL://kafka-1:9082, EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_SSL_KEYSTORE_LOCATION: /run/secrets/ssl-keystore
      KAFKA_SSL_KEYSTORE_PASSWORD: 123456
      KAFKA_SSL_KEY_PASSWORD: 123456
      KAFKA_SSL_TRUSTSTORE_LOCATION: /run/secrets/ssl-truststore
      KAFKA_SSL_TRUSTSTORE_PASSWORD: 123456
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN

      KAFKA_OPTS: "-Djava.security.auth.login.config=/run/secrets/jaas"

      KAFKA_LISTENERS: INTERNAL://kafka-1:9092,EXTERNAL://kafka-1:9082,CONTROLLER://kafka-1:9093, EXTERNAL_SAME_HOST://:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_SSL,EXTERNAL:SASL_SSL,CONTROLLER:SSL,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9094,3@kafka-3:9095'
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_BROKER_ID: 1
      CLUSTER_ID: L0ZEQh1yTbGhNNUE7-6wSQ
    networks:
      - shared-network
    volumes:
      - ./image-crud/environment/kafka/check_kafka_topics.sh:/usr/bin/check_kafka_topics.sh
      - ./image-crud/environment/kafka/kafka_client.properties:/usr/bin/kafka_client.properties
    healthcheck:
      test: bash /usr/bin/check_kafka_topics.sh kafka-1:9092 /usr/bin/kafka_client.properties
      interval: 30s
      timeout: 10s
      retries: 10

  kafka-2:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9083:9083"
      - "29093:29093"
    secrets:
      - ssl-keystore
      - ssl-truststore
      - jaas
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9093,EXTERNAL://kafka-2:9083, EXTERNAL_SAME_HOST://localhost:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_SSL_KEYSTORE_LOCATION: /run/secrets/ssl-keystore
      KAFKA_SSL_KEYSTORE_PASSWORD: 123456
      KAFKA_SSL_KEY_PASSWORD: 123456
      KAFKA_SSL_TRUSTSTORE_LOCATION: /run/secrets/ssl-truststore
      KAFKA_SSL_TRUSTSTORE_PASSWORD: 123456
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN

      KAFKA_OPTS: "-Djava.security.auth.login.config=/run/secrets/jaas"

      KAFKA_LISTENERS: INTERNAL://kafka-2:9093,EXTERNAL://kafka-2:9083,CONTROLLER://kafka-2:9094, EXTERNAL_SAME_HOST://:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_SSL,EXTERNAL:SASL_SSL,CONTROLLER:SSL,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9094,3@kafka-3:9095'
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_BROKER_ID: 2
      CLUSTER_ID: L0ZEQh1yTbGhNNUE7-6wSQ
    networks:
      - shared-network
    volumes:
      - ./image-crud/environment/kafka/check_kafka_topics.sh:/usr/bin/check_kafka_topics.sh
      - ./image-crud/environment/kafka/kafka_client.properties:/usr/bin/kafka_client.properties
    healthcheck:
      test: bash /usr/bin/check_kafka_topics.sh kafka-2:9093 /usr/bin/kafka_client.properties
      interval: 30s
      timeout: 10s
      retries: 10

  kafka-3:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9084:9084"
      - "29094:29094"
    secrets:
      - ssl-keystore
      - ssl-truststore
      - jaas
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:9094,EXTERNAL://kafka-3:9084, EXTERNAL_SAME_HOST://localhost:29094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_SSL_KEYSTORE_LOCATION: /run/secrets/ssl-keystore
      KAFKA_SSL_KEYSTORE_PASSWORD: 123456
      KAFKA_SSL_KEY_PASSWORD: 123456
      KAFKA_SSL_TRUSTSTORE_LOCATION: /run/secrets/ssl-truststore
      KAFKA_SSL_TRUSTSTORE_PASSWORD: 123456
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN

      KAFKA_OPTS: "-Djava.security.auth.login.config=/run/secrets/jaas"

      KAFKA_LISTENERS: INTERNAL://kafka-3:9094,EXTERNAL://kafka-3:9084,CONTROLLER://kafka-3:9095, EXTERNAL_SAME_HOST://:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_SSL,EXTERNAL:SASL_SSL,CONTROLLER:SSL,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9094,3@kafka-3:9095'
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_BROKER_ID: 3
      CLUSTER_ID: L0ZEQh1yTbGhNNUE7-6wSQ
    networks:
      - shared-network
    volumes:
      - ./image-crud/environment/kafka/check_kafka_topics.sh:/usr/bin/check_kafka_topics.sh
      - ./image-crud/environment/kafka/kafka_client.properties:/usr/bin/kafka_client.properties
    healthcheck:
      test: bash /usr/bin/check_kafka_topics.sh kafka-3:9094 /usr/bin/kafka_client.properties
      interval: 30s
      timeout: 10s
      retries: 10
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - 9020:8080
    secrets:
      - ssl-truststore
      - ssl-keystore
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9082,kafka-2:9083,kafka-3:9084
      KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED: 'true'
      KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED: 'true'
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_LOCATION: /run/secrets/ssl-keystore
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_PASSWORD: "123456"
      KAFKA_CLUSTERS_0_SSL_TRUSTSTORELOCATION: /run/secrets/ssl-truststore
      KAFKA_CLUSTERS_0_SSL_TRUSTSTOREPASSWORD: "123456"
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";'
    networks:
      - shared-network
  crop-processor:
    build:
      context: image-processor
      dockerfile: docker/Dockerfile
    depends_on:
      image-crud-s3:
        condition: service_started
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      crop-processor-redis:
        condition: service_started
    secrets:
      - ssl-keystore
      - ssl-truststore
    ports:
      - 8081:8081
    environment:
      - PROPS_TYPE=CROP
      - PROPS_GROUP=crop_consumer_group
      - PROPS_CONCURRENCY=2
      - PROPS_WIP_TOPIC=images.wip
      - PROPS_DONE_TOPIC=images.done

      - SERVER_PORT=8081
      - SPRING_DATA_REDIS_HOST=crop-processor-redis
      - SPRING_DATA_REDIS_PORT=6380
      - SPRING_DATA_REDIS_PASSWORD=6k_j76,dDUl_
      - MINIO_URL=http://image-crud-s3:9000
      - MINIO_ACCESS-KEY=judex
      - MINIO_SECRET-KEY=password
      - MINIO_MAIN_BUCKET=minio-storage
      - MINIO_MINOR_BUCKET=minio-temp
      - MINIO_IMAGE-SIZE=10485760
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:9082,kafka-2:9083,kafka-3:9084
      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_SSL
      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
      - SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_LOCATION=/run/secrets/ssl-truststore
      - SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_LOCATION=/run/secrets/ssl-keystore
      - SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_KEY_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=
    networks:
      - shared-network
  reverse-colors-processor:
    build:
      context: image-processor
      dockerfile: docker/Dockerfile
    depends_on:
      image-crud-s3:
        condition: service_started
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      reverse-colors-processor-redis:
        condition: service_started
    secrets:
      - ssl-keystore
      - ssl-truststore
    ports:
      - 8082:8082
    environment:
      - PROPS_TYPE=REVERSE_COLORS
      - PROPS_GROUP=reverse_colors_consumer_group
      - PROPS_CONCURRENCY=2
      - PROPS_WIP_TOPIC=images.wip
      - PROPS_DONE_TOPIC=images.done

      - SERVER_PORT=8082
      - SPRING_DATA_REDIS_HOST=reverse-colors-processor-redis
      - SPRING_DATA_REDIS_PORT=6381
      - SPRING_DATA_REDIS_PASSWORD=6k_j76,dDUl_
      - MINIO_URL=http://image-crud-s3:9000
      - MINIO_ACCESS-KEY=judex
      - MINIO_SECRET-KEY=password
      - MINIO_MAIN_BUCKET=minio-storage
      - MINIO_MINOR_BUCKET=minio-temp
      - MINIO_IMAGE-SIZE=10485760
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:9082,kafka-2:9083,kafka-3:9084
      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_SSL
      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
      - SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_LOCATION=/run/secrets/ssl-truststore
      - SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_LOCATION=/run/secrets/ssl-keystore
      - SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_KEY_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=
    networks:
      - shared-network
  remove-background-processor:
    build:
      context: cv-image-processor
      dockerfile: docker/Dockerfile
    depends_on:
      image-crud-s3:
        condition: service_started
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      remove-background-processor-redis:
        condition: service_started
    environment:
      MINIO_ENDPOINT: image-crud-s3:9000
      MINIO_ACCESS_KEY: judex
      MINIO_SECRET_KEY: password
      KAFKA_SSL_KEYFILE: /run/secrets/ssl-keyfile
      KAFKA_SSL_CERTFILE: /run/secrets/ssl_certfile
      KAFKA_SASL_MECHANISM: PLAIN
      KAFKA_SSL_CAFILE: /run/secrets/ssl_cafile
      KAFKA_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_SASL_PLAIN_USERNAME: admin
      KAFKA_SASL_PLAIN_PASSWORD: admin-secret
      WIP_TOPIC: images.wip
      DONE_TOPIC: images.done
      BOOTSTRAP_SERVERS: kafka-1:9082,kafka-2:9083,kafka-3:9084
    secrets:
      - ssl-keyfile
      - ssl_certfile
      - ssl_cafile
    networks:
      - shared-network
  brightness-processor:
    build:
      context: image-processor
      dockerfile: docker/Dockerfile
    depends_on:
      image-crud-s3:
        condition: service_started
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      brightness-processor-redis:
        condition: service_started
    secrets:
      - ssl-keystore
      - ssl-truststore
    ports:
      - 8084:8084
    environment:
      - PROPS_TYPE=BRIGHTNESS
      - PROPS_GROUP=brightness_consumer_group
      - PROPS_CONCURRENCY=2
      - PROPS_WIP_TOPIC=images.wip
      - PROPS_DONE_TOPIC=images.done

      - SERVER_PORT=8084
      - SPRING_DATA_REDIS_HOST=brightness-processor-redis
      - SPRING_DATA_REDIS_PORT=6383
      - SPRING_DATA_REDIS_PASSWORD=6k_j76,dDUl_
      - MINIO_URL=http://image-crud-s3:9000
      - MINIO_ACCESS-KEY=judex
      - MINIO_SECRET-KEY=password
      - MINIO_MAIN_BUCKET=minio-storage
      - MINIO_MINOR_BUCKET=minio-temp
      - MINIO_IMAGE-SIZE=10485760
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:9082,kafka-2:9083,kafka-3:9084
      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_SSL
      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
      - SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_LOCATION=/run/secrets/ssl-truststore
      - SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_LOCATION=/run/secrets/ssl-keystore
      - SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_KEY_PASSWORD=123456
      - SPRING_KAFKA_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=
    networks:
      - shared-network
  crop-processor-redis:
    image: redis:latest
    restart: always
    ports:
      - "6380:6380"
    command: redis-server --save 20 1 --logLevel warning --requirePass 6k_j76,dDUl_ --port 6380
    volumes:
      - redis-volume-crop:/data
    networks:
      - shared-network
  reverse-colors-processor-redis:
    image: redis:latest
    restart: always
    ports:
      - "6381:6381"
    command: redis-server --save 20 1 --logLevel warning --requirePass 6k_j76,dDUl_ --port 6381
    volumes:
      - redis-volume-reverse-colors:/data
    networks:
      - shared-network
  remove-background-processor-redis:
    image: redis:latest
    restart: always
    ports:
      - "6382:6382"
    command: redis-server --save 20 1 --logLevel warning --requirePass 6k_j76,dDUl_ --port 6382
    volumes:
      - redis-volume-remove-background:/data
    networks:
      - shared-network
  brightness-processor-redis:
    image: redis:latest
    restart: always
    ports:
      - "6383:6383"
    command: redis-server --save 20 1 --logLevel warning --requirePass 6k_j76,dDUl_ --port 6383
    volumes:
      - redis-volume-remove-background:/data
    networks:
      - shared-network

secrets:
  postgres-password:
    file: image-crud/src/main/resources/db/postgres_password.txt
  ssl-keystore:
    file: image-crud/environment/kafka/kafka.server.keystore.jks
  ssl-truststore:
    file: image-crud/environment/kafka/kafka.server.truststore.jks
  jaas:
    file: image-crud/environment/kafka/kafka_server_jaas.conf
  ssl-keyfile:
    file: image-crud/environment/kafka/client-key.pem
  ssl_certfile:
    file: image-crud/environment/kafka/client-cert.pem
  ssl_cafile:
    file: image-crud/environment/kafka/caroot.crt
networks:
  shared-network:
    driver: bridge

volumes:
  postgres-volume:
  redis-volume-crud:
  minio-volume:
  redis-volume-crop:
  redis-volume-reverse-colors:
  redis-volume-remove-background:
  